{"version":3,"sources":["multiTrack.mp4","audioTrack_1.aac","audioTrack_2.aac","Video.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Video","vRef","useRef","a1","a2","_useState","useState","_useState2","Object","slicedToArray","sliderValue","setSliderValue","_useState3","window","AudioContext","webkitAudioContext","audioCtx","_useState5","createGain","volumeGain","_useState7","Array","fill","map","_","trackEnableGain","_useState9","_useState10","s1toggleMap","setS1ToggleMap","_useState11","_useState12","s2toggleMap","setS2ToggleMap","_useState13","s1channelsGain","_useState15","s2channelsGain","useEffect","vid","current","aud1","aud2","gain","value","s1Splitter","createChannelSplitter","s2Splitter","s1merger","createChannelMerger","s2merger","onplay","play","console","log","onpause","pause","source1","createMediaElementSource","source2","connect","destination","requestAnimationFrame","syncTime","Math","abs","currentTime","handleTrackEnable","idx","handleSource1Channels","i","toConsumableArray","react_default","a","createElement","ref","src","videoSample","width","controls","muted","audioTrack1","audioTrack2","style","display","type","step","min","max","onChange","e","target","Video_Toggle","label","marginLeft","Toggle","_ref","_useState17","_useState18","isToggle","setIsToggle","onClick","concat","App","className","Video_Video","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.22fcbffd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/multiTrack.c714f4ac.mp4\";","module.exports = __webpack_public_path__ + \"static/media/audioTrack_1.e4973add.aac\";","module.exports = __webpack_public_path__ + \"static/media/audioTrack_2.9df57faa.aac\";","import React, { useRef, useEffect, useState } from \"react\";\r\nimport videoSample from \"./multiTrack.mp4\";\r\nimport audioTrack1 from \"./audioTrack_1.aac\";\r\nimport audioTrack2 from \"./audioTrack_2.aac\";\r\n\r\nexport const Video = () => {\r\n  const vRef = useRef(null);\r\n  const a1 = useRef(null);\r\n  const a2 = useRef(null);\r\n\r\n  const [sliderValue, setSliderValue] = useState(1);\r\n  const [audioCtx] = useState(\r\n    new (window.AudioContext || window.webkitAudioContext)()\r\n  );\r\n  const [volumeGain] = useState(audioCtx.createGain());\r\n  const [trackEnableGain] = useState(\r\n    Array(2)\r\n      .fill()\r\n      .map(_ => audioCtx.createGain())\r\n  );\r\n  const [s1toggleMap, setS1ToggleMap] = useState(Array(2).fill(true));\r\n  const [s2toggleMap, setS2ToggleMap] = useState(Array(1).fill(true));\r\n\r\n  const [s1channelsGain] = useState(\r\n    Array(2)\r\n      .fill()\r\n      .map(_ => audioCtx.createGain())\r\n  );\r\n  const [s2channelsGain] = useState(\r\n    Array(1)\r\n      .fill()\r\n      .map(_ => audioCtx.createGain())\r\n  );\r\n\r\n  useEffect(() => {\r\n    const vid = vRef.current;\r\n    const aud1 = a1.current;\r\n    const aud2 = a2.current;\r\n    volumeGain.gain.value = sliderValue;\r\n    const s1Splitter = audioCtx.createChannelSplitter(2);\r\n    const s2Splitter = audioCtx.createChannelSplitter(1);\r\n    const s1merger = audioCtx.createChannelMerger(2);\r\n    const s2merger = audioCtx.createChannelMerger(1);\r\n\r\n    vid.onplay = () => {\r\n      aud1.play();\r\n      aud2.play();\r\n      console.log(\"play\");\r\n    };\r\n\r\n    vid.onpause = () => {\r\n      aud1.pause();\r\n      aud2.pause();\r\n      console.log(\"pause\");\r\n    };\r\n\r\n    const source1 = audioCtx.createMediaElementSource(aud1);\r\n    const source2 = audioCtx.createMediaElementSource(aud2);\r\n    source1.connect(trackEnableGain[0]);\r\n    source2.connect(trackEnableGain[1]);\r\n\r\n    trackEnableGain[0].connect(s1Splitter);\r\n    trackEnableGain[1].connect(s2Splitter);\r\n\r\n    s1Splitter.connect(s1channelsGain[0], 0);\r\n    s1Splitter.connect(s1channelsGain[1], 1);\r\n\r\n    s2Splitter.connect(s2channelsGain[0], 0);\r\n\r\n    s1channelsGain[0].connect(s1merger, 0, 0);\r\n    s1channelsGain[1].connect(s1merger, 0, 1);\r\n\r\n    s2channelsGain[0].connect(s2merger, 0, 0);\r\n\r\n    s1merger.connect(volumeGain);\r\n    s2merger.connect(volumeGain);\r\n\r\n    volumeGain.connect(audioCtx.destination);\r\n\r\n    const syncTime = () => {\r\n      if (Math.abs(vid.currentTime - aud1.currentTime) > 0.1) {\r\n        aud1.currentTime = vid.currentTime;\r\n      }\r\n\r\n      if (Math.abs(vid.currentTime - aud2.currentTime) > 0.1) {\r\n        aud2.currentTime = vid.currentTime;\r\n      }\r\n\r\n      requestAnimationFrame(syncTime);\r\n    };\r\n\r\n    requestAnimationFrame(syncTime);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    volumeGain.gain.value = sliderValue;\r\n  }, [sliderValue]);\r\n\r\n  const handleTrackEnable = (idx, value) => {\r\n    trackEnableGain[idx].gain.value = value ? 1 : 0;\r\n  };\r\n\r\n  const handleSource1Channels = (i, value) => {\r\n    const map = [...s1toggleMap];\r\n    map[i] = value;\r\n    s1channelsGain[i].gain.value = value ? 1 : 0;\r\n    setS1ToggleMap(map);\r\n  };\r\n\r\n  const handleSource2Channels = (i, value) => {\r\n    const map = [...s2toggleMap];\r\n    map[i] = value;\r\n    s2channelsGain[i].gain.value = value ? 1 : 0;\r\n    setS2ToggleMap(map);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <video ref={vRef} src={videoSample} width=\"1000\" controls muted>\r\n        <audio ref={a1} src={audioTrack1} />\r\n        <audio ref={a2} src={audioTrack2} />\r\n      </video>\r\n      <input\r\n        style={{ display: \"block\" }}\r\n        type=\"range\"\r\n        step=\"0.01\"\r\n        min=\"0\"\r\n        max=\"1\"\r\n        onChange={e => setSliderValue(e.target.value)}\r\n        value={sliderValue}\r\n      />\r\n      <Toggle label=\"Track 1\" idx={0} onChange={handleTrackEnable} />\r\n      <div style={{marginLeft: '3rem'}}>\r\n        <Toggle label=\"Channel 1\" idx={0} onChange={handleSource1Channels} />\r\n        <Toggle label=\"Channel 2\" idx={1} onChange={handleSource1Channels} />\r\n      </div>\r\n      <Toggle label=\"Track 2\" idx={1} onChange={handleTrackEnable} />\r\n      <div style={{marginLeft: '3rem'}}>\r\n        <Toggle label=\"Channel 1\" idx={0} onChange={handleSource2Channels} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Toggle = ({ label, idx, onChange }) => {\r\n  const [isToggle, setIsToggle] = useState(true);\r\n\r\n  const handleClick = () => {\r\n    const value = !isToggle;\r\n    setIsToggle(value);\r\n    onChange(idx, value);\r\n  };\r\n\r\n  return (\r\n    <button style={{ width: \"9rem\", display: \"block\" }} onClick={handleClick}>\r\n      {isToggle ? `${label} ON` : `${label} OFF`}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Video;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Video } from './Video';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Video/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}